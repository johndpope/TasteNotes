# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  passwordHash: String!
  reviews: [Review!]!
  createdTreats: [Treat!]!
}

input AccountInput {
  username: UserName!
  email: Email!
  password: Password!
  firstName: String
  lastName: String
}

type Category {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  subcategories: [Subcategory!]!
  createdDate: DateTime!
  updatedDate: DateTime!
}

"""CategoryName has to be between 3 and 16 characters long."""
scalar CategoryName

type Company {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  createdBy: Account!
  createdDate: DateTime!
  updatedDate: DateTime!
}

"""CompanyName has to be between 3 and 24 characters long."""
scalar CompanyName

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
The Email scalar type represents E-Mail addresses compliant to RFC 822.
"""
scalar Email

input LogInInput {
  username: UserName!
  password: Password!
}

type Mutation {
  createAccount(account: AccountInput!): Account!
  updateAccount(account: UpdateAccountInput!): Account!
  deleteAccount: Boolean!
  createCategory(name: CategoryName!): Category!
  deleteCategory(id: ID!): Boolean!
  createCompany(name: CompanyName!): Company!
  deleteCompany(id: ID!): Boolean!
  createReview(review: ReviewInput!): Review!
  createSubcategory(categoryId: ID!, name: CategoryName!): Subcategory!
  deleteSubategory(id: ID!): Boolean!
  createTreat(subcategoryId: ID!, categoryId: ID!, companyId: ID!, name: TreatName!): Treat!
}

"""A password string. Has to be at least 6 characters long."""
scalar Password

type Query {
  accounts: [Account!]!
  account(id: ID!): Account!
  logIn(account: LogInInput!): Boolean!
  logOut: Boolean!
  currentAccount: Account!
  categories: [Category!]!
  category(id: ID!): Category!
  companies: [Company!]!
  company(id: ID!): Company!
  reviews: [Review!]!
  subcategories: [Subcategory!]!
  subcategory(id: ID!): Subcategory!
  treats: [Treat!]!
  treat(id: ID!): Treat!
  searchTreats(searchTerm: TreatName!): [Treat!]!
}

type Review {
  id: ID!
  score: Float!
  review: String!
  treat: Treat!
  author: Account!
  createdDate: DateTime!
  updatedDate: DateTime!
}

input ReviewInput {
  treatId: ID!
  score: Int!
  review: ReviewText
}

"""ReviewText has to be between 3 and 1024 characters long."""
scalar ReviewText

type Subcategory {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  category: Category!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Treat {
  id: ID!
  name: String!
  reviews: [Review!]!
  createdBy: Account!
  company: Company!
  category: Category!
  subcategory: Subcategory!
  createdDate: DateTime!
  updatedDate: DateTime!
}

"""TreatName has to be between 3 and 24 characters long."""
scalar TreatName

input UpdateAccountInput {
  username: UserName
  email: Email
  password: String
  firstName: String
  lastName: String
}

"""UserName has to be between 3 and 16 characters long."""
scalar UserName
