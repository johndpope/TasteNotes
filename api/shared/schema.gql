# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Account {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  email: String!
  passwordHash: String!
  isVerified: Boolean!
  reviews: [Review!]!
  tokens: [Token!]!
  createdTreats: [Treat!]!
}

input AccountInput {
  username: String!
  email: String!
  password: String!
  captchaToken: String!
  firstName: String
  lastName: String
}

type Category {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  subcategories: [Subcategory!]!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Company {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  createdBy: Account!
  createdDate: DateTime!
  updatedDate: DateTime!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LogInInput {
  username: String!
  password: String!
}

type Mutation {
  createAccount(account: AccountInput!): Account!
  updateAccount(account: UpdateAccountInput!): Account!
  deleteAccount: Boolean!
  resetPassword(password: String!, token: String!): Boolean!
  verifyAccount(token: String!): Boolean!
  uploadProfilePicture(picture: Upload!): Boolean!
  createCategory(name: String!): Category!
  deleteCategory(id: ID!): Boolean!
  createCompany(name: String!): Company!
  deleteCompany(id: ID!): Boolean!
  createReview(review: ReviewInput!): Review!
  createSubcategory(categoryId: ID!, name: String!): Subcategory!
  deleteSubategory(id: ID!): Boolean!
  createTreat(subcategoryId: ID!, categoryId: ID!, companyId: ID!, name: String!): Treat!
}

type Query {
  accounts: [Account!]!
  account(id: ID!): Account!
  logIn(account: LogInInput!): Boolean!
  logOut: Boolean!
  currentAccount: Account!
  requestPasswordReset(email: String!): Boolean!
  categories: [Category!]!
  category(id: ID!): Category!
  companies: [Company!]!
  company(id: ID!): Company!
  reviews: [Review!]!
  subcategories: [Subcategory!]!
  subcategory(id: ID): Subcategory!
  subcategoriesByCategory(categoryId: ID!): [Subcategory!]!
  treats: [Treat!]!
  treat(id: ID!): Treat!
  searchTreats(searchTerm: String!): [Treat!]!
}

type Review {
  id: ID!
  score: Float!
  review: String!
  treat: Treat!
  author: Account!
  createdDate: DateTime!
  updatedDate: DateTime!
}

input ReviewInput {
  treatId: ID!
  score: Int!
  review: String
}

type Subcategory {
  id: ID!
  name: String!
  isPublished: Boolean!
  treats: [Treat!]!
  category: Category!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Token {
  id: ID!
  token: String!
  isUsed: Boolean!
  account: Account!
  createdDate: DateTime!
  updatedDate: DateTime!
}

type Treat {
  id: ID!
  name: String!
  reviews: [Review!]!
  createdBy: Account!
  company: Company!
  category: Category!
  subcategory: Subcategory!
  createdDate: DateTime!
  updatedDate: DateTime!
}

input UpdateAccountInput {
  username: String
  email: String
  password: String
  firstName: String
  lastName: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
