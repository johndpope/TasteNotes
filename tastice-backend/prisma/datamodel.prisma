type User {
  id: ID! @id
  email: String @unique
  firstName: String!
  lastName: String!
  password: String!
  admin: Boolean!
  checkins: [Checkin!]! @relation(name: "CheckInAuthor", onDelete: CASCADE)
  friends: [User!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  }

type Product {
  id: ID! @id
  name: String!
  company: [Company!]!
  checkins: [Checkin!]! @relation(name: "CheckInProduct", onDelete: CASCADE)
  category: [Category] 
  subCategory: [SubCategory] 
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  }

type Checkin {
    id: ID! @id
    rating: Int!
    comment: String!
    author: User! @relation(name: "CheckInAuthor", onDelete: SET_NULL)
    product: Product! @relation(name: "CheckInProduct", onDelete: SET_NULL)
    createdAt: DateTime! @createdAt
    updatedAt: DateTime! @updatedAt
}

type Company {
  id: ID! @id
  name: String! @unique
  products: [Product]
}


type Category {
  id: ID! @id
  name: String! @unique
  subCategory: [SubCategory] 
  products: [Product] 
}

type SubCategory {
    id: ID! @id
    category: Category!  
    name: String! @unique
    products: [Product]
}