/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as types from "../types/index"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  MutationType: "CREATED" | "DELETED" | "UPDATED"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Mutation: {};
  Product: { // root type
    id: string; // ID!
    name: string; // String!
    producer?: string | null; // String
    type?: string | null; // String
  }
  ProductPreviousValues: { // root type
    id: string; // ID!
    name: string; // String!
    producer?: string | null; // String
    type?: string | null; // String
  }
  ProductSubscriptionPayload: { // root type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node?: NexusGenRootTypes['Product'] | null; // Product
    previousValues?: NexusGenRootTypes['ProductPreviousValues'] | null; // ProductPreviousValues
    updatedFields?: string[] | null; // [String!]
  }
  Query: {};
  Subscription: {};
  User: { // root type
    admin: boolean; // Boolean!
    email?: string | null; // String
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
  }
  UserPreviousValues: { // root type
    admin: boolean; // Boolean!
    email?: string | null; // String
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    password: string; // String!
  }
  UserSubscriptionPayload: { // root type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node?: NexusGenRootTypes['User'] | null; // User
    previousValues?: NexusGenRootTypes['UserPreviousValues'] | null; // UserPreviousValues
    updatedFields?: string[] | null; // [String!]
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  MutationType: NexusGenEnums['MutationType'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Mutation: { // field return type
    addProduct: NexusGenRootTypes['Product'] | null; // Product
    deleteProduct: NexusGenRootTypes['Product'] | null; // Product
    deleteUser: NexusGenRootTypes['User'] | null; // User
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    signup: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    updateProduct: NexusGenRootTypes['Product'] | null; // Product
    updateUser: NexusGenRootTypes['User'] | null; // User
  }
  Product: { // field return type
    id: string; // ID!
    name: string; // String!
    producer: string | null; // String
    type: string | null; // String
  }
  ProductPreviousValues: { // field return type
    id: string; // ID!
    name: string; // String!
    producer: string | null; // String
    type: string | null; // String
  }
  ProductSubscriptionPayload: { // field return type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node: NexusGenRootTypes['Product'] | null; // Product
    previousValues: NexusGenRootTypes['ProductPreviousValues'] | null; // ProductPreviousValues
    updatedFields: string[] | null; // [String!]
  }
  Query: { // field return type
    me: NexusGenRootTypes['User'] | null; // User
    products: NexusGenRootTypes['Product'][] | null; // [Product!]
    users: NexusGenRootTypes['User'][] | null; // [User!]
  }
  Subscription: { // field return type
    product: NexusGenRootTypes['ProductSubscriptionPayload'] | null; // ProductSubscriptionPayload
    user: NexusGenRootTypes['UserSubscriptionPayload'] | null; // UserSubscriptionPayload
  }
  User: { // field return type
    admin: boolean; // Boolean!
    email: string | null; // String
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
  }
  UserPreviousValues: { // field return type
    admin: boolean; // Boolean!
    email: string | null; // String
    firstName: string; // String!
    id: string; // ID!
    lastName: string; // String!
    password: string; // String!
  }
  UserSubscriptionPayload: { // field return type
    mutation: NexusGenEnums['MutationType']; // MutationType!
    node: NexusGenRootTypes['User'] | null; // User
    previousValues: NexusGenRootTypes['UserPreviousValues'] | null; // UserPreviousValues
    updatedFields: string[] | null; // [String!]
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addProduct: { // args
      name?: string | null; // String
      producer?: string | null; // String
      type?: string | null; // String
    }
    deleteProduct: { // args
      id?: string | null; // ID
    }
    deleteUser: { // args
      id?: string | null; // ID
    }
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
    signup: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      lastName?: string | null; // String
      password?: string | null; // String
    }
    updateProduct: { // args
      id?: string | null; // ID
      name?: string | null; // String
      producer?: string | null; // String
      type?: string | null; // String
    }
    updateUser: { // args
      email?: string | null; // String
      firstName?: string | null; // String
      id?: string | null; // ID
      lastName?: string | null; // String
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Mutation" | "Product" | "ProductPreviousValues" | "ProductSubscriptionPayload" | "Query" | "Subscription" | "User" | "UserPreviousValues" | "UserSubscriptionPayload";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = "MutationType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: types.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}